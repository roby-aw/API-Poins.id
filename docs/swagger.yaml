basePath: /
definitions:
  admin.Admin:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  admin.AdminSwagger:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  admin.InputAdminToken:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  customermitra.AuthLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  customermitra.InputTransactionBankEmoney:
    properties:
      amount:
        type: integer
      an_rekening:
        type: string
      bank_provider:
        type: string
      customer_id:
        type: integer
      nomor:
        type: string
      poin_account:
        type: integer
      poin_redeem:
        type: integer
    required:
    - amount
    - an_rekening
    - bank_provider
    - customer_id
    - nomor
    - poin_account
    - poin_redeem
    type: object
  customermitra.RegisterCustomer:
    properties:
      email:
        type: string
      fullname:
        type: string
      no_hp:
        type: string
      password:
        type: string
      pin:
        type: integer
    required:
    - email
    - fullname
    - no_hp
    - password
    - pin
    type: object
  customermitra.ResponseLogin:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      pin:
        type: integer
      poin:
        type: integer
      token:
        type: string
    type: object
  customermitra.UpdateCustomer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      no_hp:
        type: string
    required:
    - id
    type: object
  response.Login:
    properties:
      code:
        type: string
      messages:
        type: string
      results:
        $ref: '#/definitions/customermitra.ResponseLogin'
    type: object
host: api-poins-id.herokuapp.com/v1
info:
  contact: {}
  description: Berikut API Jasa Pengiriman
  title: API Jasa Pengiriman
  version: "1.0"
paths:
  /admin:
    get:
      consumes:
      - application/json
      description: Get all admin with data
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
      summary: Get All admin
      tags:
      - Admin using Token JWT
    post:
      consumes:
      - application/json
      description: create admin with data
      parameters:
      - description: admin
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin.AdminSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/admin.Admin'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create admin
      tags:
      - admin
  /admin/{id}:
    delete:
      consumes:
      - application/json
      description: delete data admin
      parameters:
      - description: id admin
        in: path
        name: id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ""
      summary: Delete Admin
      tags:
      - admin
    get:
      consumes:
      - application/json
      description: Get Admin By ID
      parameters:
      - description: anything id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get Admin By ID
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: update data admin
      parameters:
      - description: id admin
        in: path
        name: id
        required: true
        type: integer
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: admin
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin.AdminSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ""
      summary: Update Admin
      tags:
      - Admin using Token JWT
  /admin/token:
    post:
      consumes:
      - application/json
      description: Get token for admin
      parameters:
      - description: admin
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin.InputAdminToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ""
      summary: Get Token
      tags:
      - admin
  /register:
    post:
      consumes:
      - application/json
      description: Register customer
      parameters:
      - description: Register
        in: body
        name: Registercustomer
        required: true
        schema:
          $ref: '#/definitions/customermitra.RegisterCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customermitra.RegisterCustomer'
      summary: Register
      tags:
      - customer
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login Customer
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/customermitra.AuthLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Login'
      summary: Login
      tags:
      - Customer
  /v1/order/cashout:
    post:
      consumes:
      - application/json
      description: Emoney customer
      parameters:
      - description: inputdataemoney
        in: body
        name: InputDataCashout
        required: true
        schema:
          $ref: '#/definitions/customermitra.InputTransactionBankEmoney'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customermitra.InputTransactionBankEmoney'
      summary: Order Emoney/Cashout
      tags:
      - customerOrder
  /v1/order/emoney:
    post:
      consumes:
      - application/json
      description: Emoney customer
      parameters:
      - description: inputdataemoney
        in: body
        name: InputDataCashout
        required: true
        schema:
          $ref: '#/definitions/customermitra.InputTransactionBankEmoney'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customermitra.InputTransactionBankEmoney'
      summary: Order Emoney/Cashout
      tags:
      - customerOrder
  /v1/order/paketdata:
    post:
      consumes:
      - application/json
      description: PaketData customer
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order PaketData
      tags:
      - customerOrder
  /v1/order/pulsa:
    post:
      consumes:
      - application/json
      description: Pulsa customer
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Pulsa
      tags:
      - customerOrder
swagger: "2.0"
